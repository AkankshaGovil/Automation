#!/usr/bin/python

import xml.dom.minidom
from xml.dom.minidom import Node
from xml.dom.ext import PrettyPrint

class NextestParser:
  """ Parses an XML file generated by QMTest for each test case in the TDB database. It
      extracts test documentation provided in the argument section, together with 
      prerequisites and resources. It combines these three sections and return it
      to the caller as one string.
  """

  def __init__(self, testFile=None):
    self.testFile = testFile
    self.docString = ''
    self.prereqString = '@prerequisite'
    self.resourceString = '@resources'

  def parse(self):
    # parse the document
    doc = xml.dom.minidom.parse(self.testFile)
    
    for node in doc.getElementsByTagName("argument"):
      
      argName = node.getAttribute("name")
      if argName == 'testDocumentation':
        self.docString = ''
        for node1 in node.childNodes:
          for node2 in node1.childNodes:
            if node2.nodeType == Node.TEXT_NODE:
              self.docString = self.docString + node2.data
    
      elif argName == 'prerequisites':
        self.prereqString = '@prerequisite\n'
        for tuple1 in node.getElementsByTagName('tuple'):
          prereqTest = ''
          prereqTestVerdict=''
    
          for tuple_child1 in tuple1.childNodes[0].childNodes:
            prereqTest = tuple_child1.data
    
          for tuple_child1 in tuple1.childNodes[1].childNodes:
            prereqTestVerdict = tuple_child1.data
    
          self.prereqString = self.prereqString + "%s: %s\n" %(prereqTest, prereqTestVerdict)
    
      elif argName == 'resources':
        self.resourceString = '@resource'
        for node1 in node.childNodes:
          for node2 in node1.childNodes:
            for node3 in node2.childNodes:
              if node3.nodeType == Node.TEXT_NODE:
                self.resourceString = '%s\n%s' %(self.resourceString, node3.data)
    
    return self.docString+self.prereqString+self.resourceString



if __name__ == '__main__':
  p = NextestParser('b.xml')
  print  p.parse() 

