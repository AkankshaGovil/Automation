import os
import socket
import logging
log = logging.getLogger('nextestlog')

def ModifyNxgenScenarioFile(dirPath,version):

    """ Function used to modify the Scenario Files used by Nxgen.
    From iServer version 4.2.1 on, there will be a 100 Trying message 
    received for both INVITE and REGISTER. Hence the scenario files 
    need to be modified accordingly. For versions 4.2.1 on, the 100 
    trying message should be made mandatory by removing the parameter
    optional="true" from the recv response="100" statement. And for
    older versions the message should be made optional by adding the
    parameter  optional="true" to the recv response="100" statement.

    dirPath  --  Path of the Directory where the Scenario Files are located
    version  --  Result of compareiServerVersion('4.2.1')

    Returns True and Null if the function was successfully executed and 
    False and the error string if any error occured
    
    """  
    try:
        # Get all the files in the directory    
        filesList = os.listdir(dirPath)

        # Define what to look for in the file as per the iserver version
        if (version >= 0):
            strMatch = '<recv response="100" optional="true">'
            newStr = '<recv response="100">' 
        else:
            strMatch = '<recv response="100">'
            newStr = '<recv response="100" optional="true">' 
    
        for file in filesList:
            if file.endswith('xml'):
                f1 = open(dirPath + file, 'r')
                contentList = f1.readlines()
                f1.close()

                modified = False
                for cnt in range(0,len(contentList)):
                    if contentList[cnt].__contains__(strMatch):
                        contentList[cnt] = contentList[cnt].replace(strMatch,newStr)
                        modified = True

                if modified:
                    f2 = open(dirPath + file, 'w')
                    f2.writelines(contentList)
                    f2.close()

        return True,''

    except Exception,e:
        return False,str(e)

#45300
def ModifyScenarioFiles(dirPath):

    """ Modify the ScenarioFiles/*.xml files so that
        they will contain the actual proxy and endpoint ip addresses
        by replacing the SIP_PROXY_IP, PUB2_EP_IP, PUB_EP_IP,PRI_REALM_IP,SER_PROXY
        from the scenario file
    """
    # Get all the files in the directory
    astproxy = socket.gethostbyname('ast_sipproxy')

    openserproxy = socket.gethostbyname('openser')
    # 48354: Added code to replace the string SER_PROXY in Scenario files
    # with the actual IP of SIP Proxy
    ser_proxy = socket.gethostbyname('sipproxy')
    epip = socket.gethostbyname('public4')
    ep2ip = socket.gethostbyname('public9')
    serip = socket.gethostbyname('sipproxy')
    # 46085 Added code to replace the actual pri_realm IP in Scenariofile 
    prirealmip = socket.gethostbyname('prv_rsa')
    # 53578 Added code to replace the actual pub_realm IP in Scenariofile
    pubrealmip = socket.gethostbyname('pub_rsa')

    filesList = os.listdir(dirPath)
    #45529 - Added GW_EP_IP 
    gwip = socket.gethostbyname('private1')
    gwippri = socket.gethostbyname('private2')

    #Needed for routing_hunting_options suite for BT
    gwippri6 = socket.gethostbyname('private6')
    gwippri7 = socket.gethostbyname('private7')
    
    #52415 Added code for modifying the IP address in the user.conf and ca.conf file
    tlsep = socket.gethostbyname('public1')
    # 53578 Added code to replace the actual ip of public1 and public2
    gwip1 = socket.gethostbyname('public1')
    gwip2 = socket.gethostbyname('public2')

    #143160 - added public3 endpoint
    pub3ip = socket.gethostbyname('public3')

    # 48354 - Added entry of SER_PROXY in the list
    # - Added code for modifying the IP address in the user.conf and ca.conf file 
    # 53578 Added entry of PUB_REALM_IP, PUB_1_IP, PUB_2_IP in the list
    strList = ['OPENSER','SIP_PROXY_IP','PUB2_EP_IP','PUB_EP_IP','GW_EP_IP','GW_EP_PRI2','SER_IP','PRI_REALM_IP','SER_PROXY','PUB_REALM_IP','PUB_1_IP','PUB_2_IP','GW_EP_PRI6','GW_EP_PRI7','TLSEP','PUB3IP']
    repList = [openserproxy,astproxy,epip,ep2ip,gwip,gwippri,serip,prirealmip,ser_proxy,pubrealmip,gwip1,gwip2,gwippri6,gwippri7,tlsep,pub3ip]
    try:
        for i in range(len(filesList)):
            # removed the existing code to check the whether modifying file or directory
            if os.path.isfile(dirPath + filesList[i]):
                zfile=open(dirPath + filesList[i],"r")
                zList = zfile.readlines()
                zfile.close()
                # 160133 : Changed the logic so that it can replace multiple strings in a single line by their corresponding ips.
                lineList = []

                for j in zList:
                    line = j
                    ind = zList.index(j)
                    for k in range(len(strList)):
                        if line.__contains__(strList[k]):
                            line = line.replace(strList[k],repList[k])
                    lineList.append(line)

                zfile=open(dirPath + filesList[i],"w")
                zfile.writelines(lineList)
                zfile.close()
    except Exception, e:
        log.error('error: %s' %str(e))
