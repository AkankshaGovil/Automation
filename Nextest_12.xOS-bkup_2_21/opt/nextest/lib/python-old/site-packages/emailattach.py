"""
Sending an attachment with the mail, used especially in the case
of sending regression results to the Nextone SIT Team.
"""
import sys, smtplib, MimeWriter, base64, StringIO, string, logging

# Classes

class EmailAttachError(Exception):
    """
    General mailer error
    """


class EmailAttach(object):
    """
    This Class is used for attaching  a results of regression file with the
    mail and sending the mail to the concerned SIT people.

    """

# Functions
    def __init__(self,path,context):

        """
        This is the initialization function of EmailAttach it picks the values
        from userConfig.cfg using the context variable it also initialises the
        path of the file which is to be attached
        """
        self.log = logging.getLogger('nextestlog')
        if context.has_key('userConfig.to_addr'):
            self.toaddr = context['userConfig.to_addr']
            self.toaddrs = string.split(self.toaddr,',')
        if context.has_key('userConfig.from_addr'):
            self.fromaddr = context['userConfig.from_addr']
        if context.has_key('userConfig.mail_server'):
            self.mailserver = context['userConfig.mail_server']
        # Changes made for ticket 34247
        if context.has_key('userConfig.login'):
            self.login = context['userConfig.login']
        if context.has_key('userConfig.passwd'):
            self.passwd = context['userConfig.passwd']
        
        self.path = path

    def emailAttachment(self,subject):
        """
        It uses the MIMEWriter,StringIO and base64 module for creating the subject of the mail,
        also defining the body of the mail and attaching the file and encoding the mail with
        base64 encrytion technique for security reasons
        """
        message = StringIO.StringIO()
        writer = MimeWriter.MimeWriter(message)
        writer.addheader('Subject', subject)
        writer.startmultipartbody('mixed')

        # start off with a text/plain part
        try :
            part = writer.nextpart()
            body = part.startbody('text/plain')
            body.write('\n\rThe Result is stored at the path %s\n\rRegards, \n\rNextone-SIT' %self.path)
        except :
            self.log.error("Exception : Error in the subject part of the mail to be sent")
            raise EmailAttachError("Exception :Error in the subject part of the mail ")

        # now add an Attachment
        try :
            part = writer.nextpart()
            part.addheader('Content-Transfer-Encoding', 'base64')
            part.addheader('Content-Disposition', 'attachment; filename %s' % self.path)
            body = part.startbody('application/Octet-Stream; name=%s' % self.path)
            base64.encode(open(self.path, 'r'), body)
        except :
            self.log.error("Exception : Error in the body part of the mail to be sent")
            raise EmailAttachError("Exception :Error in the body part of the mail ")
          

        # finish off
        writer.lastpart()
        # send the mail
        try :
            s_toaddrs = string.join(self.toaddrs,",")
            # For Ticket 34247
            message_getvalue = message.getvalue() + s_toaddrs
        except :
            self.log.error("Error : The to-address %s is errorneous" %self.toaddrs)
            raise EmailAttachError("Exception : The toaddress is errorneous")

        smtp = smtplib.SMTP("%s" %self.mailserver)
        # Added for ticket 34247
        try :
            smtp.login(self.login,self.passwd)
        except :
            self.log.error("Error: The login function is not able to Authenticate Login or password")
            raise EmailAttachError("Exception :The value assigned to login %s or passwd %s is errorneous" %(self.login,self.passwd))
            
        try :
            smtp.sendmail(self.fromaddr,self.toaddrs,message_getvalue)
        except :
            self.log.error("Exception : The value assigned to to-addressess %s and from-address %s is errorneous" %(self.toaddrs,self.fromaddr))
            raise EmailAttachError("Exception :The value assigned to to-addressess %s and from-address %s is errorneous" %(s_toaddrs,self.fromaddr))

        smtp.quit()

